# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: clgportal CLI with maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      oracle:
        image: wnameless/oracle-xe-11g-r2  # Oracle 11g container image
        ports:
          - 1521:1521  # Expose Oracle port
        options: --health-cmd="nc -zv localhost 1521" --health-timeout=5s --health-start-period=10s --health-retries=5  # Health check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6  
      with:
        image: ajaykamble10/clgportal_orcl
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build with Maven Oracle
      run: mvn clean install
      env:
        SPRING_DATASOURCE_URL: jdbc:oracle:thin:@localhost:1521:XE
        SPRING_DATASOURCE_USERNAME: ajay
        SPRING_DATASOURCE_PASSWORD: Ajay@123    

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
